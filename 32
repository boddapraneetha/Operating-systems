#include <stdio.h>

#define MAX_FRAMES 3
#define MAX_PAGES 10

int findLRU(int frames[], int n) {
    int i, min = frames[0], min_index = 0;
    for (i = 1; i < n; i++) {
        if (frames[i] < min) {
            min = frames[i];
            min_index = i;
        }
    }
    return min_index;
}

void printFrames(int frames[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        if (frames[i] == -1)
            printf(" ");
        else
            printf("%d", frames[i]);
        printf(" | ");
    }
    printf("\n");
}

int main() {
    int pages[MAX_PAGES], frames[MAX_FRAMES];
    int pageFaults = 0, i, j;

    printf("Enter page reference string (0-9): ");
    for (i = 0; i < MAX_PAGES; i++) {
        scanf("%d", &pages[i]);
    }

    for (i = 0; i < MAX_FRAMES; i++)
        frames[i] = -1; // Initialize frames to -1

    printf("\nLRU Paging Simulation:\n");
    printf("Page Reference String: ");
    for (i = 0; i < MAX_PAGES; i++)
        printf("%d ", pages[i]);
    printf("\n\n");

    for (i = 0; i < MAX_PAGES; i++) {
        printf("Page %d: ", pages[i]);
        int page_found = 0;
        for (j = 0; j < MAX_FRAMES; j++) {
            if (frames[j] == pages[i]) {
                page_found = 1;
                break;
            }
        }
        if (!page_found) {
            int lru_index = findLRU(frames, MAX_FRAMES);
            frames[lru_index] = pages[i];
            pageFaults++;
            printFrames(frames, MAX_FRAMES);
        } else {
            printf("No page fault occurred.\n");
            printFrames(frames, MAX_FRAMES);
        }
    }

    printf("\nTotal Page Faults: %d\n", pageFaults);

    return 0;
}
