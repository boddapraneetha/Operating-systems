#include <stdio.h>

#define MAX_PROCESS 10

struct Process {
    int pid;  // Process ID
    int priority; // Priority of the process
    int burst_time; // Burst time of the process
    int arrival_time; // Arrival time of the process
    int remaining_time; // Remaining time to complete the process
};

void preemtive_priority(struct Process processes[], int n) {
    int current_time = 0;
    int completed = 0;
    int selected_process = -1;
    int prev_selected_process = -1;

    printf("\nPreemptive Priority Scheduling:\n");
    printf("Time\t Process\n");

    while (completed < n) {
        selected_process = -1;
        int highest_priority = 10000; // Assuming priority range from 0 to 9999

        // Finding the process with the highest priority among the arrived processes
        for (int i = 0; i < n; i++) {
            if (processes[i].arrival_time <= current_time && processes[i].remaining_time > 0) {
                if (processes[i].priority < highest_priority) {
                    highest_priority = processes[i].priority;
                    selected_process = i;
                }
            }
        }

        if (selected_process != -1) {
            // Check if there was a context switch
            if (prev_selected_process != selected_process) {
                printf("%d\t P%d\n", current_time, processes[selected_process].pid);
                prev_selected_process = selected_process;
            }

            // Decrement remaining time of selected process
            processes[selected_process].remaining_time--;

            // Check if process completed
            if (processes[selected_process].remaining_time == 0) {
                completed++;
            }
            current_time++;
        } else {
            // If no process arrived yet, time++
            printf("%d\t IDLE\n", current_time);
            current_time++;
        }
    }
}

int main() {
    struct Process processes[MAX_PROCESS];
    int n;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    printf("Enter process details (PID, Priority, Arrival Time, Burst Time):\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d %d %d %d", &processes[i].pid, &processes[i].priority, &processes[i].arrival_time, &processes[i].burst_time);
        processes[i].remaining_time = processes[i].burst_time;
    }

    preemtive_priority(processes, n);

    return 0;
}
