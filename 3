#include <stdio.h>

struct Process {
    int id;
    int arrival_time;
    int burst_time;
};

void fcfs(struct Process *processes, int n) {
    int total_waiting_time = 0, total_turnaround_time = 0, current_time = 0;
    printf("Process\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        int waiting_time = current_time - processes[i].arrival_time;
        if (waiting_time < 0) waiting_time = 0;
        int turnaround_time = waiting_time + processes[i].burst_time;
        printf("%d\t%d\t\t%d\n", processes[i].id, waiting_time, turnaround_time);
        total_waiting_time += waiting_time;
        total_turnaround_time += turnaround_time;
        current_time += processes[i].burst_time;
    }
    printf("\nAverage Waiting Time: %.2f\n", (float)total_waiting_time / n);
    printf("Average Turnaround Time: %.2f\n", (float)total_turnaround_time / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    struct Process processes[n];
    printf("Enter arrival time and burst time for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d:\n", i + 1);
        processes[i].id = i + 1;
        scanf("%d%d", &processes[i].arrival_time, &processes[i].burst_time);
    }
    fcfs(processes, n);
    return 0;
}
