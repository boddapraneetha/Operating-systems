#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

// Thread function prototype
void *printMessage(void *ptr);

int main() {
    pthread_t thread1, thread2;
    char *message1 = "Thread 1";
    char *message2 = "Thread 2";
    int iret1, iret2;

    // Create threads
    iret1 = pthread_create(&thread1, NULL, printMessage, (void*) message1);
    if (iret1) {
        fprintf(stderr,"Error - pthread_create() return code: %d\n", iret1);
        exit(EXIT_FAILURE);
    }

    iret2 = pthread_create(&thread2, NULL, printMessage, (void*) message2);
    if (iret2) {
        fprintf(stderr,"Error - pthread_create() return code: %d\n", iret2);
        exit(EXIT_FAILURE);
    }

    // Wait for the threads to finish
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);

    printf("Thread 1 returns: %d\n", iret1);
    printf("Thread 2 returns: %d\n", iret2);

    exit(EXIT_SUCCESS);
}

void *printMessage(void *ptr) {
    char *message;
    message = (char *) ptr;
    for(int i = 0; i < 5; i++) {
        printf("%s is running\n", message);
    }
    return NULL;
}
